(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[763],{68110:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return o},meta:function(){return c}});var r=t(85893),a=t(48463),o=!0,c={title:"Cloudflare Workers \u3067\u4f7f\u3048\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4e00\u89a7\u3059\u308b",description:"Cloudflare Workers \u3067\u4f7f\u3048\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4e00\u89a7\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f",date:"2022-07-06T20:47:34+09:00",tags:["cloudflare","typescript"]},s=function(n){return(0,r.jsx)(a.ZP,Object.assign({meta:c},n))};e.default=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return s?(0,r.jsx)(s,Object.assign({},n,{children:(0,r.jsx)(e,{})})):e();function e(){var e=Object.assign({p:"p",strong:"strong",pre:"pre",code:"code",a:"a"},n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["Cloudflare Workers \u3067\u306f ",(0,r.jsx)(e.strong,{children:"Module Worker Syntax"})," \u3068 ",(0,r.jsx)(e.strong,{children:"Service Worker Syntax"})," \u306e\uff12\u3064\u306e\u8a18\u8ff0\u65b9\u5f0f\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u3002\nService Worker Syntax \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u74b0\u5883\u5909\u6570\u306f\u3059\u3079\u3066\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3068\u3057\u3066\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b\u3002\u305f\u307e\u306b\u30c7\u30d0\u30c3\u30b0\u76ee\u7684\u3068\u304b\u3067\u4f7f\u3048\u308b\u4fbf\u5229\u306a\u6280\u3067\u3042\u308b\u3002"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"addEventListener('fetch', (event: FetchEvent) => {\n  // @ts-ignore\n  console.log({ ...global })\n  event.respondWith(new Response(\"Hello, World!!\"))\n})\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u5206\u304b\u308b\u901a\u308a\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u3067\u6271\u3048\u308b\u3082\u306e\u3059\u3079\u3066 ",(0,r.jsx)(e.code,{children:"global"})," \u5909\u6570\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002\u3053\u308c\u306f ",(0,r.jsx)(e.code,{children:"@cloudflare/workers-types"})," \u306b\u3082\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081 ",(0,r.jsx)(e.code,{children:"@ts-ignore"})," \u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"\u5b9f\u884c\u3057\u305f\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://gist.github.com/Code-Hex/5eb472e1f1df34cbc68e8bbf89a30adb",children:"https://gist.github.com/Code-Hex/5eb472e1f1df34cbc68e8bbf89a30adb"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"{\n  global: ServiceWorkerGlobalScope {},\n  self: ServiceWorkerGlobalScope {},\n  addEventListener: [Function: addEventListener],\n  removeEventListener: [Function: removeEventListener],\n  dispatchEvent: [Function: dispatchEvent],\n  console: Object [console] {\n    log: [Function: log],\n    warn: [Function: warn],\n    dir: [Function: dir],\n    time: [Function: time],\n    timeEnd: [Function: timeEnd],\n    timeLog: [Function: timeLog],\n    trace: [Function: trace],\n    assert: [Function: assert],\n    clear: [Function: clear],\n    count: [Function: count],\n    countReset: [Function: countReset],\n    group: [Function: group],\n    groupEnd: [Function: groupEnd],\n    table: [Function: table],\n    debug: [Function: debug],\n    info: [Function: info],\n    dirxml: [Function: dirxml],\n    error: [Function: error],\n    groupCollapsed: [Function: groupCollapsed],\n    Console: [Function: Console],\n    profile: [Function: profile],\n    profileEnd: [Function: profileEnd],\n    timeStamp: [Function: timeStamp],\n    context: [Function: context]\n  },\n  setTimeout: [Function (anonymous)],\n  setInterval: [Function (anonymous)],\n  clearTimeout: [Function: clearTimeout],\n  clearInterval: [Function: clearInterval],\n  queueMicrotask: [Function: queueMicrotask],\n  scheduler: Scheduler {},\n  atob: [Function: atob],\n  btoa: [Function: btoa],\n  Math: Object [Math] {},\n  crypto: Crypto {},\n  CryptoKey: [Function: bound CryptoKey],\n  TextDecoder: [class TextDecoder],\n  TextEncoder: [class TextEncoder],\n  fetch: [AsyncFunction: fetch],\n  Headers: [class Headers],\n  Request: [class Request extends Body],\n  Response: [class Response extends Body],\n  FormData: [class FormData] { name: 'FormData' },\n  Blob: [class Blob],\n  File: [class File extends Blob],\n  URL: [class URL],\n  URLSearchParams: [class URLSearchParams],\n  URLPattern: [class URLPattern],\n  ByteLengthQueuingStrategy: [class ByteLengthQueuingStrategy],\n  CountQueuingStrategy: [class CountQueuingStrategy],\n  ReadableByteStreamController: [class ReadableByteStreamController],\n  ReadableStream: [class ReadableStream],\n  ReadableStreamBYOBReader: [class ReadableStreamBYOBReader],\n  ReadableStreamBYOBRequest: [class ReadableStreamBYOBRequest],\n  ReadableStreamDefaultController: [class ReadableStreamDefaultController],\n  ReadableStreamDefaultReader: [class ReadableStreamDefaultReader],\n  TransformStream: [class TransformStream],\n  TransformStreamDefaultController: [class TransformStreamDefaultController],\n  WritableStream: [class WritableStream],\n  WritableStreamDefaultController: [class WritableStreamDefaultController],\n  WritableStreamDefaultWriter: [class WritableStreamDefaultWriter],\n  FixedLengthStream: [class FixedLengthStream extends TransformStream],\n  Event: [class Event] {\n    NONE: 0,\n    CAPTURING_PHASE: 1,\n    AT_TARGET: 2,\n    BUBBLING_PHASE: 3\n  },\n  EventTarget: [class EventTarget] { [Symbol(nodejs.event_target)]: true },\n  AbortController: [class AbortController],\n  AbortSignal: [class AbortSignal extends EventTarget],\n  FetchEvent: [class FetchEvent extends Event],\n  ScheduledEvent: [class ScheduledEvent extends Event],\n  DOMException: [class DOMException2 extends Error] {\n    INDEX_SIZE_ERR: 1,\n    DOMSTRING_SIZE_ERR: 2,\n    HIERARCHY_REQUEST_ERR: 3,\n    WRONG_DOCUMENT_ERR: 4,\n    INVALID_CHARACTER_ERR: 5,\n    NO_DATA_ALLOWED_ERR: 6,\n    NO_MODIFICATION_ALLOWED_ERR: 7,\n    NOT_FOUND_ERR: 8,\n    NOT_SUPPORTED_ERR: 9,\n    INUSE_ATTRIBUTE_ERR: 10,\n    INVALID_STATE_ERR: 11,\n    SYNTAX_ERR: 12,\n    INVALID_MODIFICATION_ERR: 13,\n    NAMESPACE_ERR: 14,\n    INVALID_ACCESS_ERR: 15,\n    VALIDATION_ERR: 16,\n    TYPE_MISMATCH_ERR: 17,\n    SECURITY_ERR: 18,\n    NETWORK_ERR: 19,\n    ABORT_ERR: 20,\n    URL_MISMATCH_ERR: 21,\n    QUOTA_EXCEEDED_ERR: 22,\n    TIMEOUT_ERR: 23,\n    INVALID_NODE_TYPE_ERR: 24,\n    DATA_CLONE_ERR: 25\n  },\n  WorkerGlobalScope: [class WorkerGlobalScope extends ThrowingEventTarget],\n  structuredClone: [Function: structuredClone],\n  ArrayBuffer: [Function: ArrayBuffer],\n  Atomics: Object [Atomics] {},\n  BigInt64Array: [Function: BigInt64Array],\n  BigUint64Array: [Function: BigUint64Array],\n  DataView: [Function: DataView],\n  Date: [Function: Date],\n  Float32Array: [Function: Float32Array],\n  Float64Array: [Function: Float64Array],\n  Int8Array: [Function: Int8Array],\n  Int16Array: [Function: Int16Array],\n  Int32Array: [Function: Int32Array],\n  Map: [Function: Map],\n  Set: [Function: Set],\n  SharedArrayBuffer: [Function: SharedArrayBuffer],\n  Uint8Array: [Function: Uint8Array],\n  Uint8ClampedArray: [Function: Uint8ClampedArray],\n  Uint16Array: [Function: Uint16Array],\n  Uint32Array: [Function: Uint32Array],\n  WeakMap: [Function: WeakMap],\n  WeakSet: [Function: WeakSet],\n  WebAssembly: Object [WebAssembly] {\n    compile: [Function: compile],\n    validate: [Function: validate],\n    instantiate: [Function: instantiate],\n    compileStreaming: [Function: compileStreaming],\n    instantiateStreaming: [Function: instantiateStreaming]\n  },\n  MINIFLARE: true,\n  caches: CacheStorage {},\n  HTMLRewriter: [class HTMLRewriter],\n  MessageEvent: [class MessageEvent extends Event],\n  CloseEvent: [class CloseEvent extends Event],\n  WebSocketPair: [Function: WebSocketPair],\n  WebSocket: [class WebSocket extends InputGatedEventTarget],\n  PROJECT_ID: 'example-project12345',\n  kv_namespaces: [ { binding: 'KV', id: '', preview_id: '' } ],\n  tsconfig: './tsconfig.json'\n}\n"})})]})}}},46560:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/note/cloudflare_workers_global",function(){return t(68110)}])}},function(n){n.O(0,[186,55,463,774,888,179],(function(){return e=46560,n(n.s=e);var e}));var e=n.O();_N_E=e}]);